{"version":3,"sources":["App.js","markdown.js","index.js"],"names":["App","props","state","input","handleChange","bind","e","this","setState","target","value","__html","marked","setOptions","breaks","className","id","onChange","dangerouslySetInnerHTML","getRawMarkup","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAmDeA,E,kDA5Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MCVS,0pCDYX,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBALH,E,gDAQnB,SAAaC,GACXC,KAAKC,SAAS,CACZL,MAAOG,EAAEG,OAAOC,U,0BAIpB,WACE,MAAO,CAAEC,OAAQC,iBAAOL,KAAKL,MAAMC,U,oBAIrC,WAKE,OAJAS,SAAOC,WAAW,CAChBC,QAAQ,IAIR,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,oBAAIA,UAAU,QAAd,kCAEF,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,aAAd,mBACA,0BAAUC,GAAG,SAASD,UAAU,SAASE,SAAUV,KAAKH,aAAcM,MAAOH,KAAKL,MAAMC,WAE1F,sBAAKY,UAAU,kBAAf,UACE,oBAAIA,UAAU,cAAd,oBACA,qBAAKC,GAAG,UAAUD,UAAU,UAAUG,wBAAyBX,KAAKY,8B,GArC9DC,IAAMC,WEDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e79f671b.chunk.js","sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\nimport './App.css';\nimport rawMarkdown from './markdown'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      input: rawMarkdown\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(e) {\n    this.setState({\n      input: e.target.value\n    })\n  }\n\n  getRawMarkup() {\n    return { __html: marked(this.state.input) }\n  }\n\n\n  render() {\n    marked.setOptions({\n      breaks: true\n    })\n\n    return (\n      <div className=\"container\">\n        <div className=\"titleContainer\">\n          <h1 className=\"title\">markdown previewer</h1>\n        </div>\n        <div className=\"bodyContainer\">\n          <div className=\"inputContainer\">\n            <h3 className=\"inputTitle\">input</h3>\n            <textarea id=\"editor\" className=\"editor\" onChange={this.handleChange} value={this.state.input}></textarea>\n          </div>\n          <div className=\"outputContainer\">\n            <h3 className=\"outputTitle\">output</h3>\n            <div id=\"preview\" className=\"preview\" dangerouslySetInnerHTML={this.getRawMarkup()}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","let rawMarkdown = \n\n`# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.org), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\n`;\n\nexport default rawMarkdown;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}